{"version":3,"sources":["components/WeatherApp.js","App.js","index.js"],"names":["WeatherInfo","react_default","a","createElement","Fragment","Component","APIKeySnk","App","state","Sanok","date","temp","description","sunrise","sunset","temp_max","temp_min","pressure","windSpeed","err","componentWillMount","console","log","snkAPI","concat","fetch","then","response","ok","Error","json","data","time","Date","toLocaleDateString","_this","setState","main","weather","sys","wind","speed","catch","_this$state$Sanok","this","className","WeatherApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"4LAUeA,0LANP,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,aAHcC,cCEpBC,EAAY,mCA8FHC,6MA3FbC,MAAQ,CACNC,MAAO,CACLC,KAAM,GACNC,KAAM,GACNC,YAAa,GACbC,QAAS,GACTC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,KAAK,MAGTC,mBAAqB,WACnBC,QAAQC,IAAI,eACZ,IAAMC,EAAM,wFAAAC,OAA2FlB,EAA3F,yBAEZmB,MAAMF,GACHG,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,+BAEbH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAAK,GACJ,IAAMC,GAAO,IAAIC,MAAOC,qBACxBC,EAAKC,SAAS,CACZ3B,MAAO,CACLC,KAAMsB,EACNrB,KAAMoB,EAAKM,KAAK1B,KAChBC,YAAamB,EAAKO,QAAQ,GAAG1B,YAC7BC,QAASkB,EAAKQ,IAAI1B,QAClBC,OAAQiB,EAAKQ,IAAIzB,OACjBC,SAAUgB,EAAKM,KAAKtB,SACpBC,SAAUe,EAAKM,KAAKrB,SACpBC,SAAUc,EAAKM,KAAKpB,SACpBC,UAAWa,EAAKS,KAAKC,MACrBtB,KAAK,OAIVuB,MAAM,SAAAvB,GACLE,QAAQC,IAAIH,GACZgB,EAAKC,SAAS,CACZ3B,MAAO,CACLU,KAAK,gFAKN,IAAAwB,EACsDC,KAAKpC,MAAMC,MAAhEU,EADDwB,EACCxB,IAAKT,EADNiC,EACMjC,KAAMC,EADZgC,EACYhC,KAAMC,EADlB+B,EACkB/B,YAAaG,EAD/B4B,EAC+B5B,SAAUC,EADzC2B,EACyC3B,SAEhD,OADAK,QAAQC,IAAIV,GAEVX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,SAEb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,iBAAAqB,OAAYd,IACZT,EAAAC,EAAAC,cAAA,SAAIS,GACJX,EAAAC,EAAAC,cAAA,iBAASQ,EAAT,UACAV,EAAAC,EAAAC,cAAA,sBAAcY,GACdd,EAAAC,EAAAC,cAAA,sBAAca,GACdf,EAAAC,EAAAC,cAAA,SAAIgB,EAAM,iCAAoB,IAC9BlB,EAAAC,EAAAC,cAAC2C,EAAD,OAGF7C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAC2C,EAAD,OAGF7C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,QACb5C,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAC2C,EAAD,iBAlFIzC,aCDlB0C,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fa60231f.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass WeatherInfo extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default WeatherInfo","import React, { Component } from 'react';\r\nimport \"./style/App.css\";\r\nimport WeatherInfo from \"./components/WeatherApp\"\r\n\r\nconst APIKeySnk = \"435d36d7c302598eae1424aa06754a46\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    Sanok: {\r\n      date: \"\",\r\n      temp: \"\",\r\n      description: \"\",\r\n      sunrise: \"\",\r\n      sunset: \"\",\r\n      temp_max: \"\",\r\n      temp_min: \"\",\r\n      pressure: \"\",\r\n      windSpeed: \"\",\r\n      err: false\r\n    }\r\n  }\r\n  componentWillMount = () => {\r\n    console.log(\"Działa\")\r\n    const snkAPI = `https://crossorigin.me/https://api.openweathermap.org/data/2.5/weather?q=Sanok&APPID=${APIKeySnk}&units=metric&lang=pl`\r\n\r\n    fetch(snkAPI)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response\r\n        }\r\n        throw Error(\"Brak połączenia\")\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const time = new Date().toLocaleDateString()\r\n        this.setState({\r\n          Sanok: {\r\n            date: time,\r\n            temp: data.main.temp,\r\n            description: data.weather[0].description,\r\n            sunrise: data.sys.sunrise,\r\n            sunset: data.sys.sunset,\r\n            temp_max: data.main.temp_max,\r\n            temp_min: data.main.temp_min,\r\n            pressure: data.main.pressure,\r\n            windSpeed: data.wind.speed,\r\n            err: false\r\n          }\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          Sanok: {\r\n            err: true\r\n          }\r\n        })\r\n      })\r\n  }\r\n  render() {\r\n    const { err, date, temp, description, temp_max, temp_min } = this.state.Sanok\r\n    console.log(description)\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <h1>WeatherApp</h1>\r\n          <div className=\"citys\">\r\n\r\n            <div className=\"city\">\r\n              <h2>Sanok</h2>\r\n              <p>{`Data ${date}`}</p>\r\n              <p>{description}</p>\r\n              <p>Temp {temp} &#176;C</p>\r\n              <p>Temp. max {temp_max}</p>\r\n              <p>Temp. min {temp_min}</p>\r\n              <p>{err ? \"Bład połączenia\" : \"\"}</p>\r\n              <WeatherInfo />\r\n            </div>\r\n\r\n            <div className=\"city\">\r\n              <h2>New York</h2>\r\n              <p></p>\r\n              <WeatherInfo />\r\n            </div>\r\n\r\n            <div className=\"city\">\r\n              <h2>Melbourne</h2>\r\n\r\n              <WeatherInfo />\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}